// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assuntos");

                    b.HasData(
                        new
                        {
                            CodAs = 1,
                            Descricao = "Literatura"
                        },
                        new
                        {
                            CodAs = 2,
                            Descricao = "Ficção"
                        },
                        new
                        {
                            CodAs = 3,
                            Descricao = "Religião"
                        },
                        new
                        {
                            CodAs = 4,
                            Descricao = "Mangá"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            CodAu = 1,
                            Nome = "Machado de Assis"
                        },
                        new
                        {
                            CodAu = 2,
                            Nome = "Paulo Coelho"
                        },
                        new
                        {
                            CodAu = 3,
                            Nome = "Diversos Autores"
                        },
                        new
                        {
                            CodAu = 4,
                            Nome = "Tsugumi Ohba"
                        });
                });

            modelBuilder.Entity("Domain.Entities.BookTransaction", b =>
                {
                    b.Property<int>("Codtr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codtr"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FormaDeCompra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("LivroCodl")
                        .HasColumnType("integer");

                    b.HasKey("Codtr");

                    b.HasIndex("LivroCodl");

                    b.ToTable("BookTransactions");
                });

            modelBuilder.Entity("Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codl"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("integer");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<decimal>("Preco")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasDefaultValue(0.00m);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Codl");

                    b.ToTable("Livros");

                    b.HasData(
                        new
                        {
                            Codl = 1,
                            AnoPublicacao = "1899",
                            Edicao = 1,
                            Editora = "Companhia das Letras",
                            Preco = 49.90m,
                            Titulo = "Dom Casmurro"
                        },
                        new
                        {
                            Codl = 2,
                            AnoPublicacao = "1988",
                            Edicao = 1,
                            Editora = "HarperCollins",
                            Preco = 39.90m,
                            Titulo = "O Alquimista"
                        },
                        new
                        {
                            Codl = 3,
                            AnoPublicacao = "1969",
                            Edicao = 1,
                            Editora = "Sociedade Bíblica do Brasil",
                            Preco = 0.00m,
                            Titulo = "Bíblia Sagrada"
                        },
                        new
                        {
                            Codl = 4,
                            AnoPublicacao = "2003",
                            Edicao = 1,
                            Editora = "Shueisha",
                            Preco = 59.90m,
                            Titulo = "Death Note"
                        });
                });

            modelBuilder.Entity("Domain.Entities.LivroAssunto", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("integer");

                    b.Property<int>("AssuntoCodAs")
                        .HasColumnType("integer");

                    b.HasKey("LivroCodl", "AssuntoCodAs");

                    b.HasIndex("AssuntoCodAs");

                    b.ToTable("LivroAssuntos");
                });

            modelBuilder.Entity("Domain.Entities.LivroAutor", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("integer");

                    b.Property<int>("AutorCodAu")
                        .HasColumnType("integer");

                    b.HasKey("LivroCodl", "AutorCodAu");

                    b.HasIndex("AutorCodAu");

                    b.ToTable("LivroAutores");
                });

            modelBuilder.Entity("Domain.Entities.BookTransaction", b =>
                {
                    b.HasOne("Domain.Entities.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Domain.Entities.LivroAssunto", b =>
                {
                    b.HasOne("Domain.Entities.Assunto", "Assunto")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("AssuntoCodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Domain.Entities.LivroAutor", b =>
                {
                    b.HasOne("Domain.Entities.Autor", "Autor")
                        .WithMany("LivroAutores")
                        .HasForeignKey("AutorCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAutores")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Domain.Entities.Assunto", b =>
                {
                    b.Navigation("LivroAssuntos");
                });

            modelBuilder.Entity("Domain.Entities.Autor", b =>
                {
                    b.Navigation("LivroAutores");
                });

            modelBuilder.Entity("Domain.Entities.Livro", b =>
                {
                    b.Navigation("LivroAssuntos");

                    b.Navigation("LivroAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
